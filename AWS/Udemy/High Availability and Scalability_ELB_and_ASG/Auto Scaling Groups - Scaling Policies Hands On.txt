Auto Scaling Groups - Scaling Policies Hands On
- 1. DemoASG - Automatic scaling
  = 1. Dynamic scaling policies
  = 2. Predictive scaling policies
  = 3. Scheduled actions
    -> To schedule a scaling action in the future

- 2. Schedued actions
  = Create scheduled action
    -> 1. Name
    -> 2. Desired capacity
    -> 3. Min
    -> 4. Max
    -> 5. Recurrence
    -> 6. Time zone
    -> 7. Specific start time

- 3. Predictive scaling policy
  = Create predictive scaling policy
    -> 1. Policy details
       => Scaling policy name

    -> 2. Turn on scaling
       => Toggle button for Scale based on forecast (Default: off)

    -> 3. Metrics and target utilization
       => 1. Metrics (Default: CPU utilization)
       => 2. Target utilization (Default: 50%)

    -> 4. Additional scaling settings - optional
       => 1. Pre-launch instances (Default: 5 minutes)
       => 2. Max capacity behavior
       => 3. Buffer maximum capacity above the forecasted capacity

- 4. Dynamic scaling policy
  = 1. Create dynamic scaling policy
    -> 1. Policy type (Default: Target tracking scaling)
       => 1. Target tracking scaling
       => 2. Step scaling
       => 3. Simple scaling
          -- 1. Scaling policy name
          -- 2. CloudWatch alarm
          -- 3. Take the action

    -> 2. Scaling policy name (Default: Target tracking scaling)
    -> 3. Metric type (Default: Average CPU utilization)
    -> 4. Target value (Default: 50)
    -> 5. Instance warmup (Default: 300 seconds)
    -> 6. Checkbox for Disable scale in to create only a scale-out policy

  = 2. Take the action
    -> 1. Add - 1 to many - Percent of group with 1 to many capacity units
    -> 2. Remove - 1 to many - Percent of group with 1 to many capacity units
    -> 3. Set to - 1 to many

  = 3. Create with Dydnamic scaling policy
    -> 1. Policy type - Target tracking scaling
    -> 2. Scaling policy name - Target Tracking Policy
    -> 3. Metric type - Average CPU utilization
    -> 4. Target value - 40
    -> 5. Instance warmup - 300 seconds (default)

- 5. Group size of DemoASG
  = 1. Set maximum greater than minimum (1, 1, 3)
  = 2. Check Monitoring tab and then check Auto Scaling tab EC2 tab
    -> EC2 instance is not doing anything, so is going to be close to zero

  = 3. Tab to Instance management and click Instance ID

- 6. Connect to your Instance that you accessed
  -> Connect with EC2 Instance Connect

Install Stress Amazon linux 2023 (Or install stress amazon linux 2)
- 1. sudo amazon-linux-extras install epel -y
  -> 1. If this command not found, It's ok to pass it
  -> 2. You can try with "cat /etc/image-id" and then "sudo yum install nginx"

- 2. sudo yum install stress -y
- 3. Type with stress -c 4
  = 1. Make the CPU go to 100% by leveraging 4 CPU units by making 4 vCPUs being used at a time
  = 2. Check DemoASG -> Monitoring -> EC2 tab, then see what happens on my CPU tradition

To see scaling action on Activity Tab
- 1. Pause the video until enough metric are being captured
- 2. You might can check at the Activity history that your status captured (Monitor alarm)

Cloud Watch
- 1. Click All alarms
- 2. Check two alarms are created directly by the target tracking policy
- 3. Could check AlarmHigh and AlarmLow
  = 1. In Alarm -> Alarm High, CPUUtilization > 40 for 3 datapoints within 3 minutes
  = 2. OK -> Alarm Low, CPUUtilization < 28 for 15 datapoints within 15 minutes

- 4. Check Alarms Graph
  = 1. Alarms -> TargetTracking (Checking for Graph)
  = 2. Check CPUUtilization Graph
  = 3. Going over that limit right side, made a scaling activity happen from my autoscaling group
    -> Turn made a new instance being in service

Terminate and Reboot
- 1. Leave from Connected instance CLI area
- 2. And then Reboot the instances
- 3. Check DemoASG -> Instance management
- 4. Terminating Phase -> Your target tracking policy is working
- 5. Check CloudWatch Alarm