Hands-On: Launching an EC2 Instance running Linux
- 1. We'll be launching our first virual server using the AWS Console
- 2. We'll get first high-level approach to the various parameters
- 3. We'll see that our web server is launched using EC2 user data
- 4. We'll learn how to start / stop / terminate our instance.

EC2 Launch an instance
- 1. Name and tags
- 2. Application and OS Images (Amazon Machine Image)
  = 1. Amazon Machine Image (AMI)
    -> Choose Free tier eligible instance before you launch instance

  = 2. Architecture
    -> 64-bit (x86)

- 3. Instance type
  = t2.micro - Free tier eligible

- 4. Key pair (login)
  = 1. SSH Utility to access own instance
  = 2. Key pair name - required
  = 3. Create Key pair
    -> 1. Key pair name
    -> 2. Key pair type
       => 1. RSA - Encrpyted private and public key pair
       => 2. ED25519 - Encrypted private and public key pair (Not supported for Windows Instances)

    -> 3. Private Key file format
       => 1. .pem - For use with OpenSSH, Mac or Linux or Above than Windows 10 (Windows 10, 11)
       => 2. .ppk - For use with PuTTY, Less than Windows 10 (Windows 8, 7)

- 5. Network Settings
  = 1. Network
  = 2. Subnet
  = 3. Auto-assign public IP
  = 4. Firewall (security groups)
    -> 1. Control the traffic from and to our instance, and therefore we can add rules
    -> 2. First security group called 'launch-wizard-1'
       => 1. Allow SSH Traffic from - Helps you connect to your instance
       => 2. Allow HTTPS Traffic from the internet
          -- To set up an endpoint, for example when creating a web server

       => 3. Allow HTTP Traffic from the internet
	  -- 1. To set up an endpoint, for example when creating a web server
	  -- 2. To launch the local web-server, it needs this

    -> 3. Security Group
       => 1. Create security group
       => 2. Select existing security group

- 6. Configure Storage (Storage (volumes) - with EBS)
  = EBS Volumes (In the Storage (volumes) - with EBS)
    -> Delete on Termination
       => Once we terminate our EC2 Instance, then that volume is also going to be deleted

- 7. Advanced details
  = 1. Puschasing option
  = 2. IAM Instance profile
  = 3. Hostname type
  = 4. DNS Hostname
  = 5. User data (optional)
    -> 1. When we pass a script (some comments) to our EC2 Instance 
    -> 2. To execute on the first launch of our EC2 Instance and only the first launch

- 8. Summary
  = Free tier
    -> 1. first year includes 750 hours of t2.micro
    -> 2. If you don't have a t2.micro in your region, then it's going to be a t3.micro
    -> 3. 30 GiB of EBS Storage

Instances
- 1. Details
  = 1. Instance ID
  = 2. Public IPv4 Address
    -> To access our EC2 Instance

  = 3. Private IPv4 Address
    -> To access that instance internally on the AWS network, which ir private

  = 4. Instance state
  = 5. Hostname type
  = 6. Private IP DNS name (IPv4 only)
  = 7. Platform
    -> Amazon Linux (Inferred)

  = 8. Key pair name (EC2 Tutorial)

- 2. Security
  = 1. Security Groups (created called launch-wizard-1)
  = 2. Instance Port range

WebSite
- 1. If you didn't set the program that the HTTPS works, you can't access to the webpage with it
- 2. IP next to the from is not the public IP
  = 1. IP that is Starting from 172 actually correspond to the private IPv4 Address
  = 2. Use the public IP address to access it

- 3. If you decide to stop an instance, then AWS will ot bill you for it
  = 1. The instance state is kept because you have a volume attached to it
  = 2. If you stop an instance and then you start it later on
    -> 1. AWS will maybe change its public IPv4
    -> 2. You need to copy the new IPv4 make sure to use HTTP and voila
    -> 3. We have access back to our EC2 Instance

  = 3. Private IP will always stay the same

- 4. Get rid of the instance
  = Terminate instance