Amazon EFS - Hands On
- 1. Create file system
  = 1. Customize
  = 2. File system settings
    -> 1. Regional (Standard) NFS file system
       => Stored data redundantly (replicated) across multiple AZs 

    -> 2. One Zone NFS file system
       => 1. Stored data redundantly within a single AZ
          -- You need to have for production, just testing EFS out

       => 2. AZ down, EFS file system is down, choose the AZ

    -> 3. Check Enable automatic backups
    -> 4. Lifecycle management
       => 1. Cost savings
       => 2. Object aren't being used very often, then transition them into different access tier
	  -- Standard-Infrequent Access Storage class

       => 3. File hasn't been accessed for 30 days, then Transition it into IA
       => 4. Transition it out of IA on first access or never as you want
       => 5. Encryption -> Check Enable encryption of data at rest
  
  = 3. Performance settings
    -> 1. performance mode
       => 1. General Purpose (Recommended) - Helpful for latency-sensitive applications
       => 2. Max I/O - Highly paralleized workloads can tolerate higher latencies

    -> 2. Throughput mode
       => 1. Enhanced - Throughput levels for workloads with a range of performance requirements
	  -- 1. Elastic (Recommended) - Mode for workloads with unpredictable I/O
	  -- 2. Provisioned - Mode if you can estimate your workload's throughput requirements

       => 2. Bursting - Allows you select Max I/O, scales with the amount of storage for workloads

  = 4. Network access
    -> 1. Network
       => Virtual Private Cloud (VPC) - choose the default VPC

    -> 2. Mount targets
       => 1. Chosen a regional type of EFS file system with three AZs available to us
       => 2. Each AZ is going to be assigned to a subnet

- 2. Create new Security Groups
  = efs-demo, EFS Demo SG, existed VPC ID

- 3. Refresh the page Network access and do File system settings part again
- 4. Choose the efs-demo in the Security Group field
- 5. File system policy (Not touch it right now)
- 6. Review and create 

Elastic File Systems
- 1. When you have a EFS file system, you only pay for the storage you use
- 2. Mark cost are zero
- 3. Security Groups
  = 1. Finish the mount EFS on EC2 instance first
  = 2. efs-demo + efs-sg-1 + efs-sg-2 -> auto created by the EC2 console for us

Mount EFS on EC2 instances
- 1. Launch an EC2 instance (for Instance A)
  = 1. Name - Instance A
  = 2. Disable Key pair (Proceed without a key pair)
  = 3. Create security group and Allow SSH traffic from (Name = launch-wizard-3)
  = 4. Configure storage
    -> 1. To configure the storage of the EC2 instance into Amazon EFS
    -> 2. Actually now do it from within the EC2 Console
    -> 3. Click Show details
       => Check EFS and must select a subnet before you can add an EFS file system

  = 5. Network settings
    -> Subnet - choose that the Az finish as 'a'

  = 6. Storage (volumes)
    -> 1. Add shared file system
       => File system going to be linked to my EFS right here

    -> 2. Check Automatically create and attach security groups
    -> 3. Automatically mount shared file system by attaching required user data script

- 2. Launch an EC2 instance (for Instance B, C, D - depends on number of EFS instance)
  = 1. Name - Instance B (depends on which instance you are creating for)
  = 2. Check Select existing security group
    -> Choose launch-wizard-3

Security Groups
- 1. Click efs-sg-2 and check Inbound rules
- 2. Allows the protocol NFS on specific port number
- 3. Check Edit inbound rules

Instances
- 1. Instance C to access the EFS file system
  = 1. Security group right here called efs-sg-2 is attached into my EFS file system
  = 2. All the setup is done by AWS for us, which is truly nice

- 2. Connect Instace A (and Instance C) to some the other instance
  = 1. ED2 Instance Connect
    -> Connect using EC2 Instance Connect

  = 2. 
