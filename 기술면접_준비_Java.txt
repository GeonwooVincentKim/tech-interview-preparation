1. HttpSession 을 사용하여 Login 구현

HttpSession.getAttribute("user")

사용자 A가 접속해도 "user" 를 Key 로 값을 가져오고,
사용자 B가 접속해도 "user" 를 Key 로 가져옴.
같은 Key 를 쓰는데 어떻게 A와 B를 구분해서 값을 가져오는가?

- 1. Velog 
(출처 : https://velog.io/@saint6839/HttpSession%EC%97%90%EC%84%9C-session-key%EB%8A%94-%ED%95%98%EB%82%98%EC%9D%B8%EB%8D%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%97%AC%EB%9F%AC-%EC%9C%A0%EC%A0%80%EB%A5%BC-%EA%B5%AC%EB%B6%84%ED%95%B4%EC%84%9C-%EA%B0%92%EC%9D%84-%EA%B0%80%EC%A0%B8%EC%98%AC%EA%B9%8C)
  = 1. createdUser 라는 하나의 문자열을 key 로 이용하여 Servlet Container 는
HttpClient 와 HttpServer 간의 세션을 생성

  = 2. 질문 : A, B 유저 모두 세션 값을 저장할 때, createdUser 라는 문자열을 Key 로 이용하여 Session 값 저장
  = 3. Session 은 각 Client 마다 하나씩 생성되어 제공
    -> 1. 각 Client 의 요청마다 Session 은 다르게 생성됨
    -> 2. 같은 문자열 Key 를 이용하여 session.getAttribute("createdUser"); 를 호출 할 때
       => 각 사용자의 정보가 저장된 다른 Session 값이 보이게 됨

- 2. Youtube (출처 : https://www.youtube.com/watch?v=3ArYMq5AomI)
  = 1. DB 같은 경우에는 Query Parameter 가 계속 바뀌며 전송되서 다른 값들을 구분해서
가져옴.

  = 2. 세션은 코드가 이미 "user", 혹은 "userName" 형태로 Fix 가 되어있는 상태에서
무조건 사용자에 따라 다르게 구분 함


2. Servlet Container 란?
- 1. 웹 서버란?
  -> 1. 웹 페이지를 사용자에게 전송하는 서버
  -> 2. 웹 서버는 데이터를 전송하기 위해 HTTP Protocol 을 사용
  -> 3. 일반적인 상황에서 사용자는 브라우저에 URL (https://cafe.daum.net/vincentarnold)
  -> 4. 웹 서버가 하는 일은 웹페이지를 사용자에게 전송하는 것

- 2. 서블릿 컨테이너란?
  (출처 : https://velog.io/@han_been/%EC%84%9C%EB%B8%94%EB%A6%BF-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88Servlet-Container-%EB%9E%80)
  -> 1. 서블릿들이 생성, 실행, 파괴를 담당하며, 서블릿들을 위한 상자 (Container)

- 3. 서블릿이란?
  (출처 : https://velog.io/@falling_star3/Tomcat-%EC%84%9C%EB%B8%94%EB%A6%BFServlet%EC%9D%B4%EB%9E%80)
  -> 1. 동적 웹 페이지를 만들 때 사용되는 자바 기반의 Web Application 프로그래밍 기술
  -> 2. 웹 요청과 응답의 흐름을 간단한 메서드 호출만으로 체계적으로 다룰 수 있게 해줌

3. Index 란?
(출처 : https://velog.io/@gillog/SQL-Index%EC%9D%B8%EB%8D%B1%EC%8A%A4#:~:text=Index%20%EB%8A%94%20RDBMS%EC%97%90%EC%84%9C%20%EA%B2%80%EC%83%89,%EA%B2%80%EC%83%89%EC%86%8D%EB%8F%84%EB%A5%BC%20%EB%B9%A0%EB%A5%B4%EA%B2%8C%20%ED%95%9C%EB%8B%A4.)
